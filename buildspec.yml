version: 0.2
phases:
  pre_build:
    commands:
      ### Login to Amazon ECR
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      ### Pulling the image
#      - echo Pulling latest image from Docker Hub
#      - docker pull $IMAGE_REPO_NAME:$IMAGE_TAG
      ### Creating the ECR repository
#      - aws ecr describe-repositories --repository-names ${IMAGE_REPO_NAME} || aws ecr create-repository --repository-name ${IMAGE_REPO_NAME}
  build:
    commands:
      ### Building the image
      - echo java --version
      - java --version
      - echo mvn -v
      - mvn -v
      - mvn clean install
      - echo Building the Docker Image
      - docker build -t $IMAGE_REPO_NAME .
      - echo Build started on `date`
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
  post_build:
    commands:
      ### Publish the docker image to ECR
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file
      - DOCKER_CONTAINER_NAME=web
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
       - target/Records-0.0.1-SNAPSHOT.jar
       - imagedefinitions.json
